<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxtc.bookapp.mapper.app.BangdanBooksMapper">
    <resultMap id="BaseResultMap" type="com.jxtc.bookapp.entity.BangdanBooks">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="bangdan_id" property="bangdanId" jdbcType="INTEGER"/>
        <result column="book_id" property="bookId" jdbcType="INTEGER"/>
        <result column="sort" property="sort" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        ,
        bangdan_id,
        book_id,
        sort,
        create_time,
        update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jxtc.bookapp.entity.BangdanBooksExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from bangdan_books
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from bangdan_books
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from bangdan_books
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.jxtc.bookapp.entity.BangdanBooksExample">
        delete from bangdan_books
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jxtc.bookapp.entity.BangdanBooks">
        insert into bangdan_books (id, bangdan_id, book_id,
        sort, create_time, update_time)
        values (#{id,jdbcType=INTEGER}, #{bangdanId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER},
        #{sort,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.jxtc.bookapp.entity.BangdanBooks">
        insert into bangdan_books
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bangdanId != null">
                bangdan_id,
            </if>
            <if test="bookId != null">
                book_id,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bangdanId != null">
                #{bangdanId,jdbcType=INTEGER},
            </if>
            <if test="bookId != null">
                #{bookId,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jxtc.bookapp.entity.BangdanBooksExample"
            resultType="java.lang.Integer">
        select count(*) from bangdan_books
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update bangdan_books
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.bangdanId != null">
                bangdan_id = #{record.bangdanId,jdbcType=INTEGER},
            </if>
            <if test="record.bookId != null">
                book_id = #{record.bookId,jdbcType=INTEGER},
            </if>
            <if test="record.sort != null">
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update bangdan_books
        set id = #{record.id,jdbcType=INTEGER},
        bangdan_id = #{record.bangdanId,jdbcType=INTEGER},
        book_id = #{record.bookId,jdbcType=INTEGER},
        sort = #{record.sort,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxtc.bookapp.entity.BangdanBooks">
        update bangdan_books
        <set>
            <if test="bangdanId != null">
                bangdan_id = #{bangdanId,jdbcType=INTEGER},
            </if>
            <if test="bookId != null">
                book_id = #{bookId,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxtc.bookapp.entity.BangdanBooks">
        update bangdan_books
        set bangdan_id = #{bangdanId,jdbcType=INTEGER},
        book_id = #{bookId,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByBangDanId" resultMap="BaseResultMap">
        select *
        from bangdan_books bd,
        bc_source.book_info b
        where bd.bangdan_id = #{bangDanId,jdbcType=INTEGER}
        and bd.book_id = b.book_id
        order by bd.sort asc
        limit #{offset,jdbcType=INTEGER}
        ,#{size,jdbcType=INTEGER}
    </select>
</mapper>