<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxtc.bookapp.mapper.app.UserEmpiricalMapper">
    <resultMap id="BaseResultMap" type="com.jxtc.bookapp.entity.UserEmpirical">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="empirical" property="empirical" jdbcType="INTEGER"/>
        <result column="grade" property="grade" jdbcType="INTEGER"/>
        <result column="user_discount" property="userDiscount" jdbcType="DOUBLE"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, empirical, grade, user_discount, create_time, update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jxtc.bookapp.entity.UserEmpiricalExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from user_empirical
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.jxtc.bookapp.entity.UserEmpiricalKey">
        select
        <include refid="Base_Column_List"/>
        from user_empirical
        where id = #{id,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.jxtc.bookapp.entity.UserEmpiricalKey">
        delete from user_empirical
        where id = #{id,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.jxtc.bookapp.entity.UserEmpiricalExample">
        delete from user_empirical
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jxtc.bookapp.entity.UserEmpirical">
        insert into user_empirical (id, user_id, empirical,
        grade, user_discount, create_time,
        update_time)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{empirical,jdbcType=INTEGER},
        #{grade,jdbcType=INTEGER}, #{userDiscount,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.jxtc.bookapp.entity.UserEmpirical">
        insert into user_empirical
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="empirical != null">
                empirical,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="userDiscount != null">
                user_discount,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="empirical != null">
                #{empirical,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                #{grade,jdbcType=INTEGER},
            </if>
            <if test="userDiscount != null">
                #{userDiscount,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jxtc.bookapp.entity.UserEmpiricalExample"
            resultType="java.lang.Integer">
        select count(*) from user_empirical
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_empirical
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.empirical != null">
                empirical = #{record.empirical,jdbcType=INTEGER},
            </if>
            <if test="record.grade != null">
                grade = #{record.grade,jdbcType=INTEGER},
            </if>
            <if test="record.userDiscount != null">
                user_discount = #{record.userDiscount,jdbcType=DOUBLE},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_empirical
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=VARCHAR},
        empirical = #{record.empirical,jdbcType=INTEGER},
        grade = #{record.grade,jdbcType=INTEGER},
        user_discount = #{record.userDiscount,jdbcType=DOUBLE},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxtc.bookapp.entity.UserEmpirical">
        update user_empirical
        <set>
            <if test="empirical != null">
                empirical = #{empirical,jdbcType=INTEGER},
            </if>
            <if test="grade != null">
                grade = #{grade,jdbcType=INTEGER},
            </if>
            <if test="userDiscount != null">
                user_discount = #{userDiscount,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxtc.bookapp.entity.UserEmpirical">
        update user_empirical
        set empirical = #{empirical,jdbcType=INTEGER},
        grade = #{grade,jdbcType=INTEGER},
        user_discount = #{userDiscount,jdbcType=DOUBLE},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=VARCHAR}
    </update>
</mapper>