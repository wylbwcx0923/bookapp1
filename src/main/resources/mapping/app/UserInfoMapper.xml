<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxtc.bookapp.mapper.app.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.jxtc.bookapp.entity.UserInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="headimgurl" property="headimgurl" jdbcType="VARCHAR"/>
        <result column="country" property="country" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="coin" property="coin" jdbcType="INTEGER"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="openid" property="openid" jdbcType="VARCHAR"/>
        <result column="qq" property="qq" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        ,
        user_id,
        password,
        nickname,
        sex,
        headimgurl,
        country,
        province,
        city,
        coin,
        type,
        openid,
        qq,
        phone,
        create_time,
        update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jxtc.bookapp.entity.UserInfoExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.jxtc.bookapp.entity.UserInfoKey">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="com.jxtc.bookapp.entity.UserInfoKey">
        delete
        from user_info
        where id = #{id,jdbcType=INTEGER}
          and user_id = #{userId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.jxtc.bookapp.entity.UserInfoExample">
        delete from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jxtc.bookapp.entity.UserInfo">
        insert into user_info (id, user_id, password,
                               nickname, sex, headimgurl,
                               country, province, city,
                               coin, type, openid,
                               qq, phone, create_time,
                               update_time)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{headimgurl,jdbcType=VARCHAR},
                #{country,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR},
                #{coin,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR},
                #{qq,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.jxtc.bookapp.entity.UserInfo">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="headimgurl != null">
                headimgurl,
            </if>
            <if test="country != null">
                country,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="coin != null">
                coin,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="qq != null">
                qq,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="headimgurl != null">
                #{headimgurl,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="coin != null">
                #{coin,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                #{qq,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jxtc.bookapp.entity.UserInfoExample" resultType="java.lang.Integer">
        select count(*) from user_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=INTEGER},
            </if>
            <if test="record.headimgurl != null">
                headimgurl = #{record.headimgurl,jdbcType=VARCHAR},
            </if>
            <if test="record.country != null">
                country = #{record.country,jdbcType=VARCHAR},
            </if>
            <if test="record.province != null">
                province = #{record.province,jdbcType=VARCHAR},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=VARCHAR},
            </if>
            <if test="record.coin != null">
                coin = #{record.coin,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.openid != null">
                openid = #{record.openid,jdbcType=VARCHAR},
            </if>
            <if test="record.qq != null">
                qq = #{record.qq,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_info
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        nickname = #{record.nickname,jdbcType=VARCHAR},
        sex = #{record.sex,jdbcType=INTEGER},
        headimgurl = #{record.headimgurl,jdbcType=VARCHAR},
        country = #{record.country,jdbcType=VARCHAR},
        province = #{record.province,jdbcType=VARCHAR},
        city = #{record.city,jdbcType=VARCHAR},
        coin = #{record.coin,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        openid = #{record.openid,jdbcType=VARCHAR},
        qq = #{record.qq,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxtc.bookapp.entity.UserInfo">
        update user_info
        <set>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="headimgurl != null">
                headimgurl = #{headimgurl,jdbcType=VARCHAR},
            </if>
            <if test="country != null">
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="coin != null">
                coin = #{coin,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="openid != null">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
                qq = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
        and user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxtc.bookapp.entity.UserInfo">
        update user_info
        set password    = #{password,jdbcType=VARCHAR},
            nickname    = #{nickname,jdbcType=VARCHAR},
            sex         = #{sex,jdbcType=INTEGER},
            headimgurl  = #{headimgurl,jdbcType=VARCHAR},
            country     = #{country,jdbcType=VARCHAR},
            province    = #{province,jdbcType=VARCHAR},
            city        = #{city,jdbcType=VARCHAR},
            coin        = #{coin,jdbcType=INTEGER},
            type        = #{type,jdbcType=INTEGER},
            openid      = #{openid,jdbcType=VARCHAR},
            qq          = #{qq,jdbcType=VARCHAR},
            phone       = #{phone,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
          and user_id = #{userId,jdbcType=VARCHAR}
    </update>

    <select id="getMaxId" resultType="int">
        select max(id)
        from user_info
    </select>

    <select id="selectUserListByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info
        <where>
            <if test="userId != null and userId != ''">
                and user_id=#{userId,jdbcType=VARCHAR}
            </if>
            <if test="startTime != null and startTime != '' and endTime !=null and endTime !=''">
                and create_time between concat('',#{startTime,jdbcType=VARCHAR},' 00:00:00')
                and concat('',#{endTime,jdbcType=VARCHAR},' 23:59:59')
            </if>
        </where>
        order by create_time desc
        limit #{offset,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
    </select>

    <select id="countUserList" resultType="int">
        select count(*) from user_info
        <where>
            <if test="userId != null and userId != ''">
                and user_id=#{userId,jdbcType=VARCHAR}
            </if>
            <if test="startTime != null and startTime != '' and endTime !=null and endTime !=''">
                and create_time between concat('',#{startTime,jdbcType=VARCHAR},' 00:00:00')
                and concat('',#{endTime,jdbcType=VARCHAR},' 23:59:59')
            </if>
        </where>
    </select>

    <select id="countActiviteUser" resultType="int">
        select count(*) from user_info
        <where>
            <if test="startTime != null and startTime != '' and endTime !=null and endTime !=''">
                and update_time between concat('',#{startTime,jdbcType=VARCHAR},' 00:00:00')
                and concat('',#{endTime,jdbcType=VARCHAR},' 23:59:59')
            </if>
        </where>
    </select>
    <select id="selectUserCountList" resultType="com.jxtc.bookapp.mapper.app.UserCount">
        select date(create_time) as oneDay,
        ifnull(count(*),0) as downUser
        from user_info
        group by date(create_time)
        order by date(create_time) desc
        limit #{offset,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
    </select>

    <select id="countDays" resultType="int">
        select count(DISTINCT(date(create_time))) from user_info
    </select>
    <select id="countDownloadByCanalIdAndCreateTime" resultType="java.lang.Integer">
        select ifnull(count(*),0)
        from user_info
        <where>
            <if test="canalId!=null and canalId!=0">
                and coin=#{canalId,jdbcType=INTEGER}
            </if>
            <if test="oneDay!=null and oneDay!=''">
                and create_time like concat('%',#{oneDay},'%')
            </if>
        </where>
    </select>

    <update id="updateUserUpdateTime">
        update user_info
        set update_time = #{updateTime,jdbcType=TIMESTAMP}
        where user_id=#{userId,jdbcType=VARCHAR}
    </update>
</mapper>