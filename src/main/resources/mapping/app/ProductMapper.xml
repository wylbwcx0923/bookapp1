<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxtc.bookapp.mapper.app.ProductMapper">
    <resultMap id="BaseResultMap" type="com.jxtc.bookapp.entity.Product">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="product_price" property="productPrice" jdbcType="DOUBLE"/>
        <result column="original" property="original" jdbcType="INTEGER"/>
        <result column="gift" property="gift" jdbcType="INTEGER"/>
        <result column="product_des" property="productDes" jdbcType="VARCHAR"/>
        <result column="product_info" property="productInfo" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, product_name, product_price, original, gift, product_des, product_info, create_time,
        update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jxtc.bookapp.entity.ProductExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from product
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from product
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.jxtc.bookapp.entity.ProductExample">
        delete from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jxtc.bookapp.entity.Product">
        insert into product (id, product_name, product_price,
        original, gift, product_des,
        product_info, create_time, update_time
        )
        values (#{id,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productPrice,jdbcType=DOUBLE},
        #{original,jdbcType=INTEGER}, #{gift,jdbcType=INTEGER}, #{productDes,jdbcType=VARCHAR},
        #{productInfo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.jxtc.bookapp.entity.Product">
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="productPrice != null">
                product_price,
            </if>
            <if test="original != null">
                original,
            </if>
            <if test="gift != null">
                gift,
            </if>
            <if test="productDes != null">
                product_des,
            </if>
            <if test="productInfo != null">
                product_info,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                #{productPrice,jdbcType=DOUBLE},
            </if>
            <if test="original != null">
                #{original,jdbcType=INTEGER},
            </if>
            <if test="gift != null">
                #{gift,jdbcType=INTEGER},
            </if>
            <if test="productDes != null">
                #{productDes,jdbcType=VARCHAR},
            </if>
            <if test="productInfo != null">
                #{productInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jxtc.bookapp.entity.ProductExample" resultType="java.lang.Integer">
        select count(*) from product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.productName != null">
                product_name = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.productPrice != null">
                product_price = #{record.productPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.original != null">
                original = #{record.original,jdbcType=INTEGER},
            </if>
            <if test="record.gift != null">
                gift = #{record.gift,jdbcType=INTEGER},
            </if>
            <if test="record.productDes != null">
                product_des = #{record.productDes,jdbcType=VARCHAR},
            </if>
            <if test="record.productInfo != null">
                product_info = #{record.productInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update product
        set id = #{record.id,jdbcType=INTEGER},
        product_name = #{record.productName,jdbcType=VARCHAR},
        product_price = #{record.productPrice,jdbcType=DOUBLE},
        original = #{record.original,jdbcType=INTEGER},
        gift = #{record.gift,jdbcType=INTEGER},
        product_des = #{record.productDes,jdbcType=VARCHAR},
        product_info = #{record.productInfo,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxtc.bookapp.entity.Product">
        update product
        <set>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                product_price = #{productPrice,jdbcType=DOUBLE},
            </if>
            <if test="original != null">
                original = #{original,jdbcType=INTEGER},
            </if>
            <if test="gift != null">
                gift = #{gift,jdbcType=INTEGER},
            </if>
            <if test="productDes != null">
                product_des = #{productDes,jdbcType=VARCHAR},
            </if>
            <if test="productInfo != null">
                product_info = #{productInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxtc.bookapp.entity.Product">
        update product
        set product_name = #{productName,jdbcType=VARCHAR},
        product_price = #{productPrice,jdbcType=DOUBLE},
        original = #{original,jdbcType=INTEGER},
        gift = #{gift,jdbcType=INTEGER},
        product_des = #{productDes,jdbcType=VARCHAR},
        product_info = #{productInfo,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>