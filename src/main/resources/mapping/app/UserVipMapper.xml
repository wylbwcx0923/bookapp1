<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxtc.bookapp.mapper.app.UserVipMapper" >
  <resultMap id="BaseResultMap" type="com.jxtc.bookapp.entity.UserVip" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contract_code" property="contractCode" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="vip_type" property="vipType" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="total_fee" property="totalFee" jdbcType="INTEGER" />
    <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="sign_time" property="signTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, contract_code, user_id, vip_type, status, total_fee, contract_id, sign_time, 
    pay_time, expire_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jxtc.bookapp.entity.UserVipExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vip_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from vip_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vip_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jxtc.bookapp.entity.UserVipExample" >
    delete from vip_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jxtc.bookapp.entity.UserVip" >
    insert into vip_user (id, contract_code, user_id, 
      vip_type, status, total_fee, 
      contract_id, sign_time, pay_time, 
      expire_time)
    values (#{id,jdbcType=INTEGER}, #{contractCode,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{vipType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{totalFee,jdbcType=INTEGER}, 
      #{contractId,jdbcType=VARCHAR}, #{signTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{expireTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jxtc.bookapp.entity.UserVip" >
    insert into vip_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractCode != null" >
        contract_code,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="vipType != null" >
        vip_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="signTime != null" >
        sign_time,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contractCode != null" >
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="vipType != null" >
        #{vipType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="signTime != null" >
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jxtc.bookapp.entity.UserVipExample" resultType="java.lang.Integer" >
    select count(*) from vip_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update vip_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contractCode != null" >
        contract_code = #{record.contractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.vipType != null" >
        vip_type = #{record.vipType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.totalFee != null" >
        total_fee = #{record.totalFee,jdbcType=INTEGER},
      </if>
      <if test="record.contractId != null" >
        contract_id = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.signTime != null" >
        sign_time = #{record.signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.expireTime != null" >
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update vip_user
    set id = #{record.id,jdbcType=INTEGER},
      contract_code = #{record.contractCode,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      vip_type = #{record.vipType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      total_fee = #{record.totalFee,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=VARCHAR},
      sign_time = #{record.signTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxtc.bookapp.entity.UserVip" >
    update vip_user
    <set >
      <if test="contractCode != null" >
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="vipType != null" >
        vip_type = #{vipType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="signTime != null" >
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxtc.bookapp.entity.UserVip" >
    update vip_user
    set contract_code = #{contractCode,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      vip_type = #{vipType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      total_fee = #{totalFee,jdbcType=INTEGER},
      contract_id = #{contractId,jdbcType=VARCHAR},
      sign_time = #{signTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>